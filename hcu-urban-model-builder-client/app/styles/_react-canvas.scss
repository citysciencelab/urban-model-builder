@use "sass:map";
@use "sass:color";

.react-flow {
  z-index: unset !important;
}
.react-flow__resize-control.line {
  border-color: $node-selected-color;
}

.react-flow__node {
  --xy-resize-background-color-default: #{$node-selected-color};
}

@mixin node-content() {
  width: 100%;
  height: 100%;
  border: var(--xy-node-border-default);
  border-radius: var(--xy-node-border-radius-default);
  overflow: hidden;
}

.react-flow__node-base__content {
  @include node-content();
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background-color: $white;
  border-radius: $border-radius-lg;
}
.react-flow__node-base__header {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: get-spacer(1) get-spacer(3);
  font-size: $font-size-base;
  font-weight: $headings-font-weight;
  width: 100%;
  .react-flow__node-base__icon {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  svg {
    transform: scale(0.8);
  }
}

.react-flow__node-base__footer,
.react-flow__node-arrow__footer {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: get-spacer(2) get-spacer(3);
  font-size: $font-size-sm;
  z-index: 9;

  .react-flow__node-base--tags {
    display: flex;
    gap: 0.5rem;

    .react-flow__node-base--single-tag {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: get-spacer(1) get-spacer(2);
      border-radius: $border-radius-xl;
    }
  }
}

.react-flow__node-base__name {
  padding: 0 get-spacer(2);
}

.react-flow__node-flow__label {
  padding: 0 0.5rem;
}

@each $name, $color in $node-color-map {
  .react-flow__node-#{$name} {
    .react-flow__node-base__content {
      border-color: $color;
    }
    .react-flow__node-base__header {
      background-color: $white;
    }
    .react-flow__node-base--single-tag {
      background-color: flatten-color($color, 0.5);
      color: contrast-color(flatten-color($color, 0.5));
    }
  }
  @if (
    $name ==
      "stock" or
      $name ==
      "state" or
      $name ==
      "action" or
      $name ==
      "population"
  ) {
    .react-flow__node-#{$name} {
      .react-flow__node-base__header {
        background-color: $color;
        color: contrast-color($color);

        .react-flow__node-base__icon svg {
          fill: contrast-color($color);
        }
      }
    }
  }

  @if ($name == "flow" or $name == "transition") {
    .react-flow__node-#{$name} {
      .react-flow__node-arrow__handle__target,
      .react-flow__node-arrow__handle__source {
        background-color: $color !important;
        border-color: $color !important;
      }

      .react-flow__node-arrow__content {
        .react-flow__node-arrow__icon {
          fill: $color;
          &::before {
            background-color: $color;
          }
        }
      }
    }
  }
}

$group-nodes: "folder", "agent";

@each $name in $group-nodes {
  .react-flow__node-#{$name} {
    .react-flow__node-folder__content {
      @include node-content();
      background-color: map.get($node-color-map, $name);
    }

    &.intersect {
      // add outer shine
      box-shadow: 0px 0px 15px 9px map.get($node-color-map, $name);
    }
  }
}

@each $name, $color in $edge-color-map {
  .react-flow__edge-#{$name} {
    --xy-edge-stroke: #{$color};
    --xy-edge-stroke-selected: #{darken($color, 10%)};
    --xy-edge-stroke-width: 2;
  }
}

.react-flow__node-arrow__content {
  border: var(--xy-node-border-default);
  border-radius: var(--xy-node-border-radius-default);
  border-color: transparent;

  .react-flow__node-arrow__header {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: calc(get-spacer(2) + 2.8rem) get-spacer(3) get-spacer(2);
    font-size: $font-size-base;
    font-weight: $headings-font-weight;
    width: 100%;
    gap: get-spacer(2);
    .react-flow__node-arrow__icon {
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;

      &::before {
        content: " ";
        position: absolute;
        display: block;
        width: calc(get-spacer(3) + 2px);
        height: 2px;
        right: calc(100% - calc(0.5 * $font-size-base));
      }
    }
    svg {
      display: flex;
      align-items: center;
      justify-content: center;
      width: $font-size-base;
      height: $font-size-base;
    }
  }

  .react-flow__node-arrow__footer {
    height: 2.8rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &:has(.react-flow__node-arrow__handle__target.react-flow__handle-top) {
    .react-flow__node-arrow__header {
      flex-direction: column;

      .react-flow__node-arrow__icon {
        transform: rotate(90deg);
        &::before {
          width: calc(calc(get-spacer(1) + 2.8rem) + 2px);
        }
      }
    }
  }

  &:has(.react-flow__node-arrow__handle__target.react-flow__handle-right) {
    .react-flow__node-arrow__header {
      flex-direction: row-reverse;
      .react-flow__node-arrow__icon {
        transform: rotate(180deg);
        &::before {
          width: calc(get-spacer(3) + 2px);
        }
      }
    }
  }

  &:has(.react-flow__node-arrow__handle__target.react-flow__handle-bottom) {
    .react-flow__node-arrow__header {
      flex-direction: column-reverse;
      .react-flow__node-arrow__icon {
        transform: rotate(-90deg);
        &::before {
          width: calc(calc(get-spacer(1) + 2.8rem) + 2px);
        }
      }
    }
  }
}

.selected > .react-flow__node-arrow__content {
  border-color: $node-selected-color;
}

.react-flow__node-arrow__handle__target,
.react-flow__node-arrow__handle__source {
  width: get-spacer(3) !important;
  height: get-spacer(3) !important;
  display: flex;
  justify-content: center;
  align-items: center;
  svg {
    overflow: visible;
    transform: scale(0.5);
  }
}

.react-flow__node-arrow__handle__target {
  &.react-flow__handle-right {
    svg {
      transform: rotate(180deg);
    }
  }
  &.react-flow__handle-top {
    svg {
      transform: rotate(90deg);
    }
  }

  &.react-flow__handle-bottom {
    svg {
      transform: rotate(-90deg);
    }
  }
}

.react-flow__node-arrow__handle__source {
  &.react-flow__handle-left {
    svg {
      transform: rotate(180deg);
    }
  }

  &.react-flow__handle-top {
    svg {
      transform: rotate(-90deg);
    }
  }

  &.react-flow__handle-bottom {
    svg {
      transform: rotate(90deg);
    }
  }
}

.react-wrapper .react-flow__controls {
  flex-direction: row;
}
.react-wrapper .react-flow__panel {
  z-index: 1052;
}
.react-wrapper .react-flow__panel.center {
  margin-left: 140px;
  margin-right: 140px;
  // overflow: auto;
  width: calc(100% - 280px);
  display: flex;
  justify-content: center;

  left: auto;
  transform: none;
}

.react-flow__node-toolbar {
  border-radius: calc(1rem + 1px);
  background-color: $dark;

  button {
    background: transparent;
    border: none;
    height: 2rem;
    width: 2rem;
    border-radius: 50%;
    margin: 2px;
    text-align: center;
    &:hover {
      background-color: lighten($dark, 20%);
    }
  }
}

.react-flow__edge__control-point {
  &:focus {
    outline: none;
    fill: var(--xy-edge-stroke-selected-default);
  }
}

.react-flow__node {
  .react-flow__node-arrow__handle__target,
  .react-flow__node-arrow__handle__source {
    height: 8px;
    width: 8px;
    border-color: $black;
    background-color: $white;
  }
}
